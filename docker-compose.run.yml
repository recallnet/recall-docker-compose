name: $project_name

services:
  cometbft:
    image: $cometbft_image
    command: run --home /cometbft
    restart: always
    volumes:
      - $workdir/cometbft:/cometbft

  fendermint:
    image: $fendermint_image
    command: run
    restart: always
    volumes:
      - $workdir/fendermint:/data
    env_file:
      - ./config/network-${network_name}.env
      - ./config/services/fendermint.env

  ethapi:
    image: $fendermint_image
    command: eth run
    restart: always
    volumes:
      - $workdir/fendermint:/data
    env_file:
      - ./config/network-${network_name}.env
      - ./config/services/fendermint.env
      - ./config/services/ethapi.env
    depends_on:
      - fendermint

  iroh:
    image: $iroh_image
    command: |
      --rpc-addr 0.0.0.0:4919
      --metrics-addr 0.0.0.0:4920
      --config /etc/iroh/config.toml
      start
    restart: always
    volumes:
      - $datadir:/data
      - ./config/services/iroh.config.toml:/etc/iroh/config.toml
    environment:
      IROH_DATA_DIR: /data
      IROH_CONFIG_DIR: /etc/iroh

  objects:
    image: $fendermint_image
    command: objects run
    restart: always
    volumes:
      - $workdir/fendermint:/data
    env_file:
      - ./config/network-${network_name}.env
      - ./config/services/fendermint.env
      - ./config/services/objects.env
    depends_on:
      - fendermint
      - cometbft
      - iroh

  hoku-exporter:
    image: $hoku_exporter_image
    restart: always
    env_file:
      - $workdir/generated/hoku-exporter.env
      - ./config/network-${network_name}.env
      - ./config/services/hoku-exporter.env
    depends_on:
      - ethapi

  prometheus:
    image: $prometheus_image
    restart: always
    volumes:
      - $workdir/prometheus:/etc/prometheus
    command: >
      --config.file=/etc/prometheus/config.yml
      --storage.tsdb.retention.time=10m

